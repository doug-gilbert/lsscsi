.TH LS_NAME_VALUE "8" "May 2023" "lsscsi\-0.33" LSSCSI
.SH NAME
ls_name_value \- for browsing names and corresponding values in sysfs
.SH SYNOPSIS
.B ls_name_value
[\fI\-\-dir\fR] [\fI\-\-help\fR] [\fI\-\-nosym\fR] [\fI\-\-otherfs\fR]
[\fI\-\-show\fR] [\fI\-\-verbose\fR] [\fI\-\-version\fR]
[\fINAME\fR ...]
.SH DESCRIPTION
.\" Add any additional description here
This bash shell script is designed to give an overview of the (file)names
and their corresponding values in the sysfs pseudo file system found in
Linux. Only printable ASCII is shown for each value, on the same line
following the name and a colon. Let that be called a "name:value pair".
A simple example follows where "power_role" is a regular file:
    $ ls_name_value /sys/class/typec/port1/power_role
    power_role : source [sink]
.PP
The emphasis of this script is to get an overview of multiple name:value
pairs in the same or nearby directories. This is done at the expense
of accurate renderings of the associated values. Other tools may be used
to get better renderings of those values, for example the
.B od
and
.B hd
Unix commands if the value contains binary data.
.PP
This script may also be suitable for other pseudo file systems, but not
if they pause a Unix read(2) waiting for an event to happen. The tracefs
pseudo file system has waiting read(2)s and this is an issue since an
instance of tracefs is often mounted under sysfs (e.g. /sys/kernel/trace ).
Due to this issue, every time this script tries to descend into a
directory, it checks if it is still in the original file system instance.
If not, then it does not descend and outputs a "<different filesystem>"
message. An example that shows this action is:
    $ ls_name_value \-d /dev /sys
    >> descend to: /dev/:
        ....
    >> not descending to: /sys/: <different filesystem>
.br
This occurs because /dev is contained in an instance of devfs while /sys
is contained in an instance of sysfs.
.PP
The name shown in each "name:value pair" is its basename it it is given with
an absolute or relative path. The value shown will only contain printable
ASCII characters, truncated at 256 bytes. If any characters read from that
name have the top bit set (in a character/byte) then the whole value is
replaced with "<contains non\-ASCII chars>". If the name has write
permissions set for the accessing user then the whole value is replaced
by "<writable>" (even if read permissions are also set). If the value in
the name cannot be read (and the name is a regular file) then the whole
value is replaced by "<cannot access>".
.PP
Simplified command line parsing is performed in this script. This means
that all options must appear before the \fINAME\fR list on the command
line. Also short options cannot be elided (e.g. \fB\-ds\fR ) unless
explicitly allowed in the OPTIONS section.
.SH OPTIONS
Arguments to long options are mandatory for short options as well.
.TP
\fB\-d\fR, \fB\-\-dir\fR
When give once, if any files in the \fINAME\fR list are directories, then
this script enters each directory and list its name:value pairs. Those
name:value pairs are preceded by four spaces to show 1 level of nesting.
If the \fINAME\fR list is empty, then the contents of the current
working directory are used as a name list.
.br
If this option is given twice, then up to two levels directories are
entered. Those name:value pairs are preceded by eight spaces. Note that
the repeated short form option \fB\-dd\fR can be used.
.br
The is a special case when a single element \fINAME\fR list is given and
that name is a directory. This script will enter that directory and list
its name:value pairs without the need for this option.
.TP
\fB\-h\fR, \fB\-\-help\fR
print out the usage message then exit.
.TP
\fB\-N\fR, \fB\-\-nosym\fR
in sysfs most symbolic links (symlinks) point to other directories rather
than regular files. Sometimes following symlinks and expanding the directory
adds too much noise so this option prunes out symlinks to directories.
.TP
\fB\-o\fR, \fB\-\-otherfs\fR
as explained in the DESCRIPTION section above, sometimes descending into
directories in other file systems can cause issues. So the default action
is to prune any branch (directory) that is not file system as the first
file (which may be a directory). Giving this option skips the file system
check.
.TP
\fB\-s\fR, \fB\-\-show\fR
usually only regular files are shown in name:value pair format. The main
exception is a directory which this utility will "descend" into. For
example it is shown like this:
    $ ls_name_value -d /sys/class/typec/port1
    data_role : [host] device
    >> descend to: device/:
        driver_override : (null)
        modalias : acpi:USBC000:PNP0CA0:
        ....
.br
Directories that are not visited are not shown by default. Also other file
types, sometimes called "specials" are not shown. Those specials include
char and block devices, pipes and sockets.
.br
When this option is given all file types are shown. For directories that
are not descended into there are two cases:
    \fBalso a symlink\fR : the value is "---> <link_destination>"
    \fBnot a symlink\fR : the value is "-->"
.br
For other special file types the value is the file type between angle
brackets (e.g. "<block device>" ).
.TP
\fB\-v\fR, \fB\-\-verbose\fR
increase level or verbosity.
.TP
\fB\-V\fR, \fB\-\-version\fR
prints out the version string then exits.
.SH AUTHORS
Written by D. Gilbert
.SH COPYRIGHT
Copyright \(co 2023 Douglas Gilbert
.br
This software is distributed under a BSD\-2\-Clause license. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.SH "SEE ALSO"
.B lsscsi(this package), od(GNU coreutils), hd(util-linux)
